@page
@model IndexModel
@{
    ViewData["Title"] = "Home page";
}


<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
    MathJax = {
        options: {
            menuOptions: {
                settings: {
                    renderer: 'SVG',     // CHTML or 'SVG'
                }
            }
        }
    };
</script>

<div class="my-container">

   <h1>
        Nem hiszed? <span class="derivald">Deriváld le!</span>
   </h1>


   <div class="math-wrapper"> 

        <form method="post">
            <fieldset> 
                @*<label for="derivativeInput">f(x) = </label>*@
                <div class="derivative-wrapper">
                    <input class="derivative-input" type="text" name="derivativeInput" value="" />
                    <label>&nbsp;</label>
                    <input class="button" placeholder="f(x) = sin(x)" type="submit" value="Deriváljunk!" class="submit" />
                </div>
            </fieldset>
        </form>

        <div class="output-wrapper">

            @{
                if (HttpMethods.IsPost(Request.Method))
                {

                    if (ViewData["errorString"] == "") 
                    {
                        <div class="equation-wrapper">

                            @{
                                if (ViewData["prettyInput"] != ViewData["prettySimplifiedInput"]) {
                                    <text>
                                        $$ @ViewData["prettyInput"] = @ViewData["prettySimplifiedInput"] = @ViewData["derivativeOutput"] $$
                                    </text>
                                }
                                else
                                {
                                    <text>
                                        $$ @ViewData["prettySimplifiedInput"] = @ViewData["derivativeOutput"] $$
                                    </text>
                                }
                            }

                        </div>

                        <input 
                            type="button"
                            value="Mutasd a lépéseket!"
                            class="button"
                            onserverclick="ShowSolution"
                            runat="server" 
                        />

                        <ul>
                            @foreach (var step in ViewData["prettySteps"] as IList<string>)
                            {
                                <li>
                                    $$ @step $$
                                </li>
                            }
                        </ul>
                    }
                    else 
                    {
                        <text>@ViewData["errorString"]</text>          
                    }
                }

            }

            
            
        </div>

   </div>

</div>
