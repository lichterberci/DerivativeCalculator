@page
@using DerivativeCalculator
@model IndexModel
@{

}


<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script type="text/x-mathjax-config">
    MathJax.Hub.Config({tex2jax: {inlineMath: [['$','$'], ['\\(','\\)']]}});
    MathJax = {
        options: {
            menuOptions: {
                settings: {
                    renderer: 'SVG',     // CHTML or 'SVG'
                }
            }
        }
    };
</script>

<script>
    // btn onclicks

    var areStepsVisible = false;

    function ToggleSteps () {
        const shouldTheyBeVisible = !areStepsVisible;
        areStepsVisible = shouldTheyBeVisible;

        const steps = document.querySelector('#steps');
        steps.style.display = shouldTheyBeVisible ? "block" : "none";

        const btn = document.querySelector("#showStepsBtn");
        btn.value = shouldTheyBeVisible ? "Lépések elrejtése" : "Lépések mutatása";
    }

</script>

<div class="my-container">

   <h1>
        Nem hiszed? <span class="derivald">Deriváld le!</span>
   </h1>




   <div class="math-wrapper"> 

        <form method="post">
            <fieldset> 
                @*<label for="derivativeInput">f(x) = </label>*@
                <div class="derivative-wrapper">
                    <input class="derivative-input" type="text" name="derivativeInput" value="" placeholder="sin(x)^2"/>
                    <label>&nbsp;</label>
                    <input class="button btn-der" type="submit" value="Deriváljunk!" class="submit" />
                </div>
            </fieldset>
        </form>

        <div class="output-wrapper">

            @{
                if (HttpMethods.IsPost(Request.Method))
                {

                    if (ViewData["errorString"] == "") 
                    {
                                <div class="equation-wrapper">

                                    @{
                                //if (ViewData["prettyInput"] != ViewData["prettySimplifiedInput"]) {
                                //    <text>
                                //        $$ @ViewData["prettyInput"] = @ViewData["prettySimplifiedInput"] = @ViewData["derivativeOutput"] $$
                                //    </text>
                                //}
                                //else
                                //{
                                                    <text>
                                                        $$ @ViewData["prettySimplifiedInput"] = @ViewData["derivativeOutput"] $$
                                                    </text>
                                //}
                                    }

                                </div>

                        
                                <ul id="steps" style="display:none;">
                                    @foreach ((string step, StepDescription? stepDescription) in ViewData["stepsWithDescriptions"] as IList<(string, StepDescription?)>)
                            {
                                        <li class="steps">
                                            $$ = @step $$

                                        </li>
                            }
                                </ul>
                        
                                <input class="button btn-steps" id="showStepsBtn" type="button" value="Mutasd a lépéseket" onclick="javascript:ToggleSteps()" />
                        
                    }
                    else 
                    {
                                <div class="error-text">@ViewData["errorString"]</div>          
                    }
                }

            }

            
            
        </div>

   </div>

</div>
